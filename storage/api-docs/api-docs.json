{
    "openapi": "3.0.0",
    "info": {
        "title": "Batoilogic G01",
        "version": "1.0.0"
    },
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Gets all orders",
                "description": "Obtains all orders that are stored in the database",
                "operationId": "getOrders",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/order"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Add an order",
                "description": "Store a new order in the database",
                "operationId": "postOrder",
                "requestBody": {
                    "description": "Posting an order",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/orderResource"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/orders/{id}": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Show an order",
                "description": "Show an order stored in the database",
                "operationId": "showOrder",
                "requestBody": {
                    "description": "Posting an order",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "": {}
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/orderResource"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "orders"
                ],
                "summary": "Edits an order",
                "description": "Overwrites an order stored in the database",
                "operationId": "updateOrder",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/orderResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "orders"
                ],
                "summary": "Deletes an order",
                "description": "Deletes an order stored in the database",
                "operationId": "deletesOrder",
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/orderlines": {
            "get": {
                "tags": [
                    "orderlines"
                ],
                "summary": "Gets all orderlines",
                "description": "Obtains all orderlines that are stored in the database",
                "operationId": "getOrderlines",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/orderline"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "orderlines"
                ],
                "summary": "Add an orderline",
                "description": "Store a new orderline in the database",
                "operationId": "postOrderline",
                "requestBody": {
                    "description": "Posting an orderline",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/orderlineResource"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/orderlines/{id}": {
            "get": {
                "tags": [
                    "orderlines"
                ],
                "summary": "Show an orderline",
                "description": "Show an orderline stored in the database",
                "operationId": "showOrderline",
                "requestBody": {
                    "description": "Posting an orderline",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "": {}
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/orderlineResource"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "orderlines"
                ],
                "summary": "Edits an orderline",
                "description": "Overwrites an orderline stored in the database",
                "operationId": "updateOrderline",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/orderlineResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "orderlines"
                ],
                "summary": "Deletes an orderline",
                "description": "Deletes an orderline stored in the database",
                "operationId": "deletesOrderline",
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "Gets all products",
                "description": "Obtains all products that are stored in the database",
                "operationId": "getProducts",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/product"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Add an product",
                "description": "Store a new product in the database",
                "operationId": "postproduct",
                "requestBody": {
                    "description": "Posting an product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/productResource"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "Show a product",
                "description": "Show a product stored in the database",
                "operationId": "showproduct",
                "requestBody": {
                    "description": "Posting an product",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "": {}
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/productResource"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "products"
                ],
                "summary": "Edits a product",
                "description": "Overwrites a product stored in the database",
                "operationId": "updateproduct",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/productResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "products"
                ],
                "summary": "Deletes a product",
                "description": "Deletes a product stored in the database",
                "operationId": "deletesproduct",
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/providers": {
            "get": {
                "tags": [
                    "providers"
                ],
                "summary": "Gets all providers",
                "description": "Obtains all providers that are stored in the database",
                "operationId": "getProviders",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/providerResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "providers"
                ],
                "summary": "Add a provider",
                "description": "Store a new provider in the database",
                "operationId": "postprovider",
                "requestBody": {
                    "description": "Posting a provider",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/providerResource"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/providers/{id}": {
            "get": {
                "tags": [
                    "providers"
                ],
                "summary": "Show a provider",
                "description": "Show a provider stored in the database",
                "operationId": "showProvider",
                "requestBody": {
                    "description": "Posting a provider",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "": {}
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/providerResource"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "providers"
                ],
                "summary": "Edits a provider",
                "description": "Overwrites a provider stored in the database",
                "operationId": "updateProvider",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/providerResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "providers"
                ],
                "summary": "Deletes an provider",
                "description": "Deletes a provider stored in the database",
                "operationId": "deletesprovider",
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/states": {
            "get": {
                "tags": [
                    "states"
                ],
                "summary": "Gets all states",
                "description": "Obtains all states that are stored in the database",
                "operationId": "getstates",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/state"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/states/{id}": {
            "get": {
                "tags": [
                    "states"
                ],
                "summary": "Show an state",
                "description": "Show an state stored in the database",
                "operationId": "showstate",
                "requestBody": {
                    "description": "Posting an state",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "": {}
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/state"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Gets all Users",
                "description": "Obtains all Users that are stored in the database",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Add a User",
                "description": "Store a new User in the database",
                "operationId": "postUser",
                "requestBody": {
                    "description": "Posting a User",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/Users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show an User",
                "description": "Show an User stored in the database",
                "operationId": "showUser",
                "requestBody": {
                    "description": "Posting a User",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id"
                                ],
                                "properties": {
                                    "": {}
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Edits an user",
                "description": "Overwrites an user stored in the database",
                "operationId": "updateUser",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deletes an User",
                "description": "Deletes an User stored in the database",
                "operationId": "deletesUser",
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The user has not been authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "orderResource": {
                "title": "orderResource",
                "description": "recurso del proyecto",
                "properties": {
                    "data": {
                        "title": "data",
                        "description": "Data Wraper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/order"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "orderResource"
                }
            },
            "orderlineResource": {
                "title": "orderlineResource",
                "description": "recurso del proyecto -- orderline",
                "properties": {
                    "data": {
                        "title": "data",
                        "description": "Data Wraper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/orderline"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "orderlineResource"
                }
            },
            "productResource": {
                "title": "prodcutResource",
                "description": "recurso del proyecto",
                "properties": {
                    "data": {
                        "title": "data",
                        "description": "Data Wraper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/product"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "productResource"
                }
            },
            "providerResource": {
                "title": "providerResource",
                "description": "recurso del proyecto, proveedor",
                "properties": {
                    "data": {
                        "title": "data",
                        "description": "Data Wraper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/provider"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "providerResource"
                }
            },
            "statesResource": {
                "title": "orderResource",
                "description": "recurso del proyecto",
                "properties": {
                    "data": {
                        "title": "data",
                        "description": "Data Wraper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/state"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "stateResource"
                }
            },
            "userResource": {
                "title": "userResource",
                "description": "recurso del proyecto",
                "properties": {
                    "data": {
                        "title": "data",
                        "description": "Data Wraper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "userResource"
                }
            },
            "User": {
                "required": [
                    "id,name,password,email"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "Sandra Walter"
                    },
                    "email": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "example@batoilogic.com"
                    },
                    "password": {
                        "type": "string",
                        "readOnly": "true"
                    },
                    "role": {
                        "description": "Specifies the role of the user in the app",
                        "type": "string",
                        "readOnly": "true",
                        "example": "admin"
                    },
                    "remember_token": {
                        "description": "token for API autherntication",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "profile_photo_path": {
                        "description": "location where th user's profile photo can be found",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "address": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "Big Sad Street"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "user"
                }
            },
            "order": {
                "required": [
                    "id,title"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "dealer_id": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "6"
                    },
                    "client_id": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "5"
                    },
                    "state_id": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "title": {
                        "description": "Date expected for the package to arrive",
                        "type": "date",
                        "readOnly": "true",
                        "example": "2000-04-12"
                    },
                    "order": {
                        "description": "Order that determines wich order will be delivered first",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "6"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "order"
                }
            },
            "orderline": {
                "required": [
                    "id,product_id,quantity,order_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "product_id": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "Iphone 11"
                    },
                    "order_id": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "quantity": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "5"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "orderline"
                }
            },
            "product": {
                "required": [
                    "id,name,description,price,stock,active,provider_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "provider_id": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "6"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "5"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "price": {
                        "description": "Date expected for the package to arrive",
                        "type": "date",
                        "readOnly": "true",
                        "example": "2000-04-12"
                    },
                    "stock": {
                        "description": "Amount of items that are available in the storage",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "6"
                    },
                    "active": {
                        "description": "Shows if an article is active or not. 1 stands for active, 0 stands for inactive",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "6"
                    },
                    "photo": {
                        "description": "This field is nullable. Here we will find the photo linked to a certain prouct",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "6"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "product"
                }
            },
            "provider": {
                "required": [
                    "id,name,email,phone"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "6"
                    },
                    "logo": {
                        "description": "Photo that is assigned as the provider's logo",
                        "type": "string",
                        "readOnly": "true"
                    },
                    "email": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "phone": {
                        "description": "Phone assigned to the provider",
                        "type": "string",
                        "readOnly": "true",
                        "example": "606055814"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "provider"
                }
            },
            "state": {
                "required": [
                    "id,text"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "text": {
                        "type": "string",
                        "readOnly": "true",
                        "example": "En ruta"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "states"
                }
            }
        },
        "responses": {
            "200": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "user": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden"
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}